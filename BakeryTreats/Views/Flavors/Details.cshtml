@{
  Layout = "_Layout";
}
@model BakeryTreats.Models.Flavor;
<h1>Flavor Details </h1>
<hr />
<h3>Name: @Html.DisplayFor(model => model.FlavorName)</h3>
<h3>Description: @Html.DisplayFor(model => model.FlavorDescription)</h3>
@if (@Model.Treats.Count == 0)
{
  <p>This Flavor is not assigned any Treats</p>
}
else
{
  <h3>Treats assigned to this Flavor:</h3>
  <ul>
    @foreach (var join in Model.Treats)
    {
      @using (Html.BeginForm("DeleteTreat", "Flavors"))
      {
      <li>@Html.ActionLink($"{join.Treat.TreatName}", "Details", "Treats", new { id = join.Treat.TreatId })     <input type="submit" value="Remove" class="btn btn-warning btn-sm" /></li>
      @Html.Hidden("flavorId", @join.FlavorId)
      @Html.Hidden("joinId", @join.TreatFlavorId)      
      }
    }
  </ul>  
}
<hr />
<p>@Html.ActionLink("Edit this Flavor", "Edit", new { id = Model.FlavorId }, new {@class="btn btn-success btn-sm"})</p>
<p>@Html.ActionLink("Delete this Flavor", "Delete", new { id = Model.FlavorId }, new {@class="btn btn-danger btn-sm"})</p>
<p>@Html.ActionLink("Add a Treat", "AddTreat", "Flavors", new { id = Model.FlavorId } , new {@class="btn btn-success btn-sm"})</p>